* Intro
** Hook
I am proud that this website uses very little JavaScript.  None of it is
essential, and the JavaScript that is used exists to provide supplementary
functionality to the content on each page.  Things like dynamically generated
tables of contents are convenient, but the content is good enough to stand alone
(or so I hope!).  However, there was one outlier: the Google Analytics code
included in the header of every page.
** Analytics sucks, morally
Google Analytics sucks.  It sucks for a number of reasons.  From a technical
perspective, it is actually quite marvelous, though fundamentally flawed for
reasons I will get to later.  The other reason it sucks is that user tracking
and privacy infringement is antisocial, malicious, and quite evil.  Whether or
not user tracking is immoral, whether or not it is even useful, and whether or
not Big Data is a completely misguided endeavor would be an interesting topic of
discussion for elsewhere.  Suffice to say it should be something that one opts
in to, not something that one opts out of.  When I browse websites, I block
Google Analytics, so including it on my site was rather hypocritical.
** Why analytics, why google
For a small personal website like this, analytics isn't a crucial operational
component; it's just nice to have.  I can use it to monitor page hits, which
makes me feel nice that people visit my site.  I can use it to see roughly what
visitors are interested in and roughly what kind of people they might be.  Up
until now, I have used Google Analytics because it was convenient, but it had
always made me uncomfortable to sell out my readers to Google, so I have finally
removed it.  Now, I use FOSS software and my web server logs for my analytics
needs.
* Analytics with server logs
** Data
Analytics is the analysis of data.  Therefore, you need data, and you need tools
for analyzing the data.  Google Analytics gets its data from the JavaScript code
embedded in webpages, as well as any and all applicable data from other parts of
the Google hivemind.  I now get my data from my web server logs.
** HTTP
What information does the server have access to?  When a webpage is accessed,
the client first requests the page from the server, and the server sends the
page to the client.  The server therefore has access to all of the information
in the request headers, as well as information in the request itself, such as
who sent the request, when the request was received, and what was requested.
** Request fields
The request headers contain a lot of information, including the user agent and
referrer[fn:1] fields.  These headers are useful for analysis purposes and
therefore potentially damaging to one's privacy.  They can be forged or omitted,
so their value for analytics depends on whether they can be corroborated with
other, more trustworthy data.

[fn:1] The field is officially called "Referer" due to a costly mistake by the
author of the relevant RFC.
** web logs
What subset of this information is available in the server logs depends on your
server and configuration.  A server that keeps logs merely for diagnostic
purposes might only keep the time of each request, the page that was requested,
and the IP that requested it, whereas a server depending on them for analytics
might log everything and send it to a database instead of a log file on the
server.
** analysis
With data in hand, the analysis can be done however you want.  On the simple
side, one might simply plot the number of requests per day to see whether there
are any interesting patterns, such as peaks on weekends.  On the other extreme,
one could throw state of the art machine learning algorithms at the data to
identify individuals and their browsing habits, like Google no doubt does.
** goaccess
For me, some basic analysis and reporting is sufficient.  Two programs I have
found and tried are visitors and GoAccess.  visitors is old: it doesn't
recognize Chrome's User Agent, for example, and its reports are visually
simple.  GoAccess is newer and primarily intended for live monitoring, though it
can generate reports too.  Both work well.
** 2
After playing with both, I settled with a short script for generating reports:

#+BEGIN_SRC sh
  scp -r user@server.example.com:/var/log/webserver logs
  find logs -name "*.gz" | parallel gunzip
  cat logs/* | goaccess -p ~/.goaccessrc -a > report.html
#+END_SRC
* Some analytics for this site
** analytics
Before I finish writing, I'd like to share some rough insights from this site's
analytics.
** GA
First, from Google Analytics.  There was a peak in visits in the latter half of
December, with an average of about 30 per day.  Before that, the average is
around 7 per day.  Of the roughly 300 visits in the past month, about half go to
~/?from=http://www.traffic2cash.xyz/~ (the homepage, with a referrer) and half
to ~/~ (the homepage).  There were 250 Chrome users and 40 Firefox users.
** goaccess
Next, from my server logs.  There was a fairly even distribution of visits in
November and December, averaging roughly 60 per day.  There were a total of 3000
visits to ~/~, and 150 visits to ~/robots.txt~ (these requests failed, as this
site uses ~/index.xml~ in lieu of it).  There were 2000 web crawlers, 1500
Firefox users, and 100 Chrome users.
** sucks
There are huge discrepancies in the data from Google Analytics and my server
logs.  In particular, Google Analytics only tracked 10% of the actual visits to
my site.  This brings me to my earlier point, Google Analytics not only sucks
morally, it sucks technically as well.
** JS block
I suspect the reason is JavaScript blocking.  Web crawlers and bots did not show
up in Google Analytics because they do not execute JavaScript, but many human
users (or visitors that appear to be human users) did not show up either.  As
the average user grows more and more aware of privacy issues and begins blocking
tracking ads and scripts, Google Analytics is just going to suck more and more.
** other
P.S.: For you bots and script kiddies poking at phpMyAdmin and cgi-bin, this
site is completely static.  I wish you good luck trying to exploit the HTML
files.
